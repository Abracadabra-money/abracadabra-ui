import { BigNumber, utils } from "ethers";

export const magicGlpConfig = {
  config: {
    icon: "http://127.0.0.1:5173/src/assets/images/tokens/mGlpToken.png",
    name: "MagicGLP",
    chainId: 42161,
    id: 3,
    liquidationFee: 7.5,
    mcr: 75,
    borrowFee: 0,
    version: 4,
    cauldronSettings: {
      isSwappersActive: true,
      is0xSwap: true,
      isDegenBox: true,
      strategyLink:
        "https://abracadabramoney.gitbook.io/learn/intro/stake/mglp",
      isDepreciated: false,
      acceptUseDefaultBalance: false,
      healthMultiplier: 1,
      hasAccountBorrowLimit: true,
      hasWithdrawableLimit: false,
      localBorrowAmountLimit: false,
      hasCrvClaimLogic: false,
    },
    contract: {
      name: "CauldronV4",
      address: "0x726413d7402fF180609d0EBc79506df8633701B1",
      abi: [],
    },
    collateralInfo: {
      name: "magicGLP",
      decimals: 18,
      address: "0x85667409a723684Fe1e57Dd1ABDe8D88C2f54214",
      abi: [],
    },
    mimInfo: {
      name: "MIM",
      icon: "http://127.0.0.1:5173/src/assets/images/tokens/MIM.png",
      decimals: 18,
      address: "0xFEa7a6a0B346362BF88A9e4A88416B77a57D6c2A",
      abi: [],
    },
    wrapInfo: {
      isHiddenWrap: false,
      useUnwrappedByDefault: true,
      unwrappedToken: {
        name: "GLP",
        icon: "http://127.0.0.1:5173/src/assets/images/tokens/GLP.png",
        address: "0x5402B5F40310bDED796c7D0F3FF6683f5C0cFfdf",
        abi: [],
      },
      wrapper: {
        address: "0x565adE5536Ab84018e00d6d7f56E7a300717c10b",
        abi: [],
      },
    },
    leverageInfo: {
      address: "0xDe36DEf82F9da4493925407e37E6548d5D9bd7eD",
      abi: [],
    },
    deleverageInfo: {
      address: "0xeB07b275dCe4b32FA3bbF505104C26E9A3B478d9",
      abi: [],
    },
  },
  contracts: {
    cauldron: {},
    bentoBox: {},
    collateral: {},
    mim: {},
    leverageSwapper: {},
    liquidationSwapper: {},
    unwrappedToken: {},
    wrapper: {},
  },
  mainParams: {
    borrowFee: 0,
    interest: 7,
    liquidationFee: 7.5,
    collateralPrice: utils.parseUnits("1.36", 18),
    mimLeftToBorrow: utils.parseUnits("100", 18),
    maximumCollateralRatio: utils.parseUnits("0.075", 18),
    oracleExchangeRate: utils.parseUnits("0.73", 18),
    totalBorrowed: utils.parseUnits("1000000", 18),
    tvl: utils.parseUnits("10000", 18),
    userMaxBorrow: BigNumber.from("0"),
    updatePrice: true,
  },
  userPosition: {
    collateralInfo: {
      userCollateralShare: utils.parseUnits("1.1", 18),
      userCollateralAmount: utils.parseUnits("1.1", 18),
    },
    borrowInfo: {
      userBorrowAmount: utils.parseUnits("6", 18),
      userBorrowPart: utils.parseUnits("5.7", 18),
    },
    oracleRate: utils.parseUnits("0.73", 18),
    liquidationPrice: 0.7282680282935005,
    positionHealth: 46.516112433166754,
    collateralDeposited: 11.249383651728545,
    collateralDepositedUsd: 15.317821542654482,
    mimBorrowed: 6.144424838671115,
    hasActiveGmOrder: false,
  },
  userTokensInfo: {
    collateralBalance: utils.parseUnits("6", 18),
    mimBalance: BigNumber.from("0"),
    nativeTokenBalance: utils.parseUnits("0.03", 18),
    collateralAllowance: utils.parseUnits("6", 18),
    mimAllowance: BigNumber.from("0"),
    unwrappedTokenBalance: utils.parseUnits("4.8", 18),
    unwrappedTokenAllowance: BigNumber.from("0"),
  },
  additionalInfo: {
    isMasterContractApproved: true,
    tokensRate: utils.parseUnits("1.16", 18),
    maxWithdrawAmount: BigNumber.from("0"),
    whitelistedInfo: null,
    isCollateralLocked: false,
    feePercent: null,
    gmInfo: null,
    hasActiveGmOrder: false,
  },
};
