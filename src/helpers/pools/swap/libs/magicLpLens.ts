import { hexToBytes } from "viem";

export const magicLpLensContract = {
  abi: [
    {
      type: "function",
      name: "getMidPrice",
      inputs: [
        {
          name: "state",
          type: "tuple",
          internalType: "struct PMMPricing.PMMState",
          components: [
            {
              name: "i",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "K",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "B",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "Q",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "B0",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "Q0",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "R",
              type: "uint8",
              internalType: "enum PMMPricing.RState",
            },
          ],
        },
      ],
      outputs: [
        {
          name: "",
          type: "uint256",
          internalType: "uint256",
        },
      ],
      stateMutability: "pure",
    },
    {
      type: "function",
      name: "sellBaseToken",
      inputs: [
        {
          name: "state",
          type: "tuple",
          internalType: "struct PMMPricing.PMMState",
          components: [
            {
              name: "i",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "K",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "B",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "Q",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "B0",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "Q0",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "R",
              type: "uint8",
              internalType: "enum PMMPricing.RState",
            },
          ],
        },
        {
          name: "payBaseAmount",
          type: "uint256",
          internalType: "uint256",
        },
      ],
      outputs: [
        {
          name: "receiveQuoteAmount",
          type: "uint256",
          internalType: "uint256",
        },
        {
          name: "newR",
          type: "uint8",
          internalType: "enum PMMPricing.RState",
        },
      ],
      stateMutability: "pure",
    },
    {
      type: "function",
      name: "sellQuoteToken",
      inputs: [
        {
          name: "state",
          type: "tuple",
          internalType: "struct PMMPricing.PMMState",
          components: [
            {
              name: "i",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "K",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "B",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "Q",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "B0",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "Q0",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "R",
              type: "uint8",
              internalType: "enum PMMPricing.RState",
            },
          ],
        },
        {
          name: "payQuoteAmount",
          type: "uint256",
          internalType: "uint256",
        },
      ],
      outputs: [
        {
          name: "receiveBaseAmount",
          type: "uint256",
          internalType: "uint256",
        },
        {
          name: "newR",
          type: "uint8",
          internalType: "enum PMMPricing.RState",
        },
      ],
      stateMutability: "pure",
    },
    {
      type: "error",
      name: "ErrIsZero",
      inputs: [],
    },
  ],
  code: hexToBytes(
    "0x608060405234801561000f575f80fd5b506004361061003f575f3560e01c80634cd3df5f1461004357806351c113071461006d57806398e80fef14610080575b5f80fd5b610056610051366004610950565b6100a1565b604051610064929190610a0c565b60405180910390f35b61005661007b366004610950565b6100b9565b61009361008e366004610a3c565b6100c5565b604051908152602001610064565b5f806100ad84846101ca565b915091505b9250929050565b5f806100ad84846102ba565b5f60026100d860e0840160c08501610a55565b60028111156100e9576100e96109f8565b0361015d575f610119606084013561010560a086013580610a82565b61010f9190610a99565b84606001356103b3565b90506101298360200135826103da565b61013f6020850135670de0b6b3a7640000610ab8565b6101499190610acb565b90506101568335826103b3565b9392505050565b5f6101886040840135610174608086013580610a82565b61017e9190610a99565b84604001356103b3565b90506101988360200135826103da565b6101ae6020850135670de0b6b3a7640000610ab8565b6101b89190610acb565b90506101568335826103da565b919050565b5f80808460c0015160028111156101e3576101e36109f8565b036101fd576101f284846103ee565b9150600190506100b2565b60018460c001516002811115610215576102156109f8565b03610224576101f28484610413565b5f84606001518560a001516102399190610ab8565b90505f856080015186604001516102509190610ab8565b90508185101561027b57610264868661042e565b93506002925080841115610276578093505b6102b1565b81850361028d578093505f92506102b1565b6102a08661029b8488610ab8565b6103ee565b6102aa9082610acb565b9350600192505b50509250929050565b5f80808460c0015160028111156102d3576102d36109f8565b036102ed576102e28484610461565b9150600290506100b2565b60018460c001516002811115610305576103056109f8565b0361039e575f8460400151856080015161031f9190610ab8565b90505f8560a0015186606001516103369190610ab8565b9050818510156103615761034a868661047e565b9350600192508084111561035c578093505b610397565b818503610373578093505f9250610397565b610386866103818488610ab8565b610461565b6103909082610acb565b9350600292505b50506100b2565b6103a884846104a8565b946002945092505050565b5f816103c7670de0b6b3a764000085610a82565b6103d19190610a99565b90505b92915050565b5f670de0b6b3a76400006103c78385610a82565b5f6103d18360800151846080015184610409875f01516104c5565b87602001516104df565b5f6103d18360800151846040015184610409875f01516104c5565b5f6103d18360a001518385606001516104479190610acb565b60608601518651610457906104c5565b87602001516107a0565b5f6103d18360a001518460a0015184865f015187602001516104df565b5f6103d183608001518385604001516104979190610acb565b6040860151865160208801516107a0565b5f6103d18360a00151846060015184865f015187602001516104df565b5f6103d4826ec097ce7bc90715b34b9f1000000000610a99565b5f855f036105005760405163a03b73b760e01b815260040160405180910390fd5b835f0361050e57505f610797565b815f0361053d578461052084866103da565b116105345761052f83856103da565b610536565b845b9050610797565b670de0b6b3a76400008203610606575f806105588686610a82565b9050805f03610569575f91506105d7565b86816105758282610a82565b61057f9190610a99565b036105a95761058e8880610a82565b6105988883610a82565b6105a29190610a99565b91506105d7565b8785816105b68a8a610a82565b6105c09190610a99565b6105ca9190610a82565b6105d49190610a99565b91505b6105e9670de0b6b3a764000083610acb565b6105f38389610a82565b6105fd9190610a99565b92505050610797565b5f6106118585610a82565b878761061d8287610a82565b6106279190610a99565b6106319190610a82565b61063b9190610acb565b90505f8661065185670de0b6b3a7640000610ab8565b61065b9190610a82565b90505f8282106106795761066f8383610ab8565b91505f905061068a565b6106838284610ab8565b9150600190505b61069c670de0b6b3a764000083610a99565b91505f6106d96106b487670de0b6b3a7640000610ab8565b6106bf906004610a82565b8b6106ca898e6103da565b6106d49190610a82565b6103da565b90506106f8816106e98580610a82565b6106f39190610acb565b610876565b90505f61070d87670de0b6b3a7640000610ab8565b610718906002610a82565b90505f83156107525761072b8584610ab8565b9050805f0361074d5760405163a03b73b760e01b815260040160405180910390fd5b61075f565b61075c8386610acb565b90505b5f61076a82846108e3565b90508b811115610783575f975050505050505050610797565b61078d818d610ab8565b9750505050505050505b95945050505050565b5f855f036107c15760405163a03b73b760e01b815260040160405180910390fd5b5f6107cc8587610ab8565b6107d69085610a82565b9050825f036107f9576107f1670de0b6b3a764000082610a99565b915050610797565b5f610818876108088a80610a82565b6108129190610a99565b876103b3565b90505f61082585836103da565b90506ec097ce7bc90715b34b9f1000000000838261084b88670de0b6b3a7640000610ab8565b6108559190610acb565b61085f9190610a82565b6108699190610a99565b9998505050505050505050565b5f60038211156108d55750805f61088e600283610a99565b610899906001610acb565b90505b818110156108cf579050806002816108b48186610a99565b6108be9190610acb565b6108c89190610a99565b905061089c565b50919050565b81156101c557506001919050565b5f6103d1826108fa670de0b6b3a764000086610a82565b905f806109078385610a99565b90505f6109148483610a82565b61091e9086610ab8565b9050801561093a57610931826001610acb565b925050506103d4565b5090506103d4565b8035600381106101c5575f80fd5b5f80828403610100811215610963575f80fd5b60e0811215610970575f80fd5b5060405160e0810181811067ffffffffffffffff821117156109a057634e487b7160e01b5f52604160045260245ffd5b604090815284358252602080860135908301528481013590820152606080850135908201526080808501359082015260a080850135908201526109e560c08501610942565b60c08201529460e0939093013593505050565b634e487b7160e01b5f52602160045260245ffd5b8281526040810160038310610a2f57634e487b7160e01b5f52602160045260245ffd5b8260208301529392505050565b5f60e0828403128015610a4d575f80fd5b509092915050565b5f60208284031215610a65575f80fd5b6103d182610942565b634e487b7160e01b5f52601160045260245ffd5b80820281158282048414176103d4576103d4610a6e565b5f82610ab357634e487b7160e01b5f52601260045260245ffd5b500490565b818103818111156103d4576103d4610a6e565b808201808211156103d4576103d4610a6e56fea2646970667358221220365425dea63069ddacfc38a37d67d9070a9d525466821308d00b0914772e172364736f6c634300081a0033"
  ),
} as const;
